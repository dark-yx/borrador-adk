name: Deploy LegisLink Pro to Google Cloud

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: legislink-pro
  REGION: us-central1
  SERVICE_NAME: legislink-backend

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        cd legislink-pro
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        cd legislink-pro
        python -m pytest tests/ -v --cov=legislink-pro --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./legislink-pro/coverage.xml

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Google Auth
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
        project_id: ${{ env.PROJECT_ID }}
    
    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v2'
    
    - name: Configure Docker
      run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
    
    - name: Build and push Backend
      run: |
        cd legislink-pro
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/legislink-repo/backend:${{ github.sha }} .
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/legislink-repo/backend:${{ github.sha }}
    
    - name: Build and push Frontend
      run: |
        cd legislink-pro/frontend
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/legislink-repo/frontend:${{ github.sha }} .
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/legislink-repo/frontend:${{ github.sha }}
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy legislink-backend \
          --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/legislink-repo/backend:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --port 5000 \
          --memory 2Gi \
          --cpu 2 \
          --max-instances 10 \
          --set-env-vars FLASK_ENV=production,GCP_PROJECT_ID=${{ env.PROJECT_ID }},GCP_REGION=${{ env.REGION }} \
          --service-account legislink-service@legislink-pro.iam.gserviceaccount.com
    
    - name: Deploy Frontend to Cloud Run
      run: |
        gcloud run deploy legislink-frontend \
          --image ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/legislink-repo/frontend:${{ github.sha }} \
          --region ${{ env.REGION }} \
          --platform managed \
          --allow-unauthenticated \
          --port 80 \
          --memory 512Mi \
          --cpu 1 \
          --max-instances 5
    
    - name: Update secrets
      run: |
        echo "${{ secrets.GEMINI_API_KEY }}" | gcloud secrets versions add legislink-gemini-key --data-file=-
        echo "${{ secrets.DB_PASSWORD }}" | gcloud secrets versions add legislink-db-password --data-file=-
        echo "${{ secrets.DB_HOST }}" | gcloud secrets versions add legislink-db-host --data-file=-
        echo "${{ secrets.DRIVE_FOLDER_ID }}" | gcloud secrets versions add legislink-drive-folder --data-file=-
    
    - name: Update Cloud Run with secrets
      run: |
        gcloud run services update legislink-backend \
          --region ${{ env.REGION }} \
          --update-secrets GEMINI_API_KEY=legislink-gemini-key:latest,DB_PASSWORD=legislink-db-password:latest,DB_HOST=legislink-db-host:latest,GOOGLE_DRIVE_FOLDER_ID=legislink-drive-folder:latest

  notify:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.build-and-deploy.result }}" == "success" ]; then
          echo "✅ Deployment successful!"
          echo "Backend URL: https://legislink-backend-${{ env.REGION }}-${{ env.PROJECT_ID }}.a.run.app"
          echo "Frontend URL: https://legislink-frontend-${{ env.REGION }}-${{ env.PROJECT_ID }}.a.run.app"
        else
          echo "❌ Deployment failed!"
        fi
